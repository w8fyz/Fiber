plugins {
    id 'maven-publish'
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'sh.fyz'
version = '1.0-SNAPSHOT'

publishing {
    repositories {
        maven {
            name "zoxouuRepositoryPrivate"
            url "https://repo.zoxouu.me/private"
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId = "sh.fyz"
            artifactId = "fiber"
            version = "0.0.4"

            artifact shadowJar // Publish the fat jar instead of the normal jar
        }
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://repo.freshperf.fr/repository/freshperf/'
        credentials {
            username = 'dev'
            password = 't_238k[~e75\')6HA+|'
        }
    }
}

dependencies {
    implementation 'org.postgresql:postgresql:42.1.4'
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Jetty Server
    implementation 'org.eclipse.jetty:jetty-server:11.0.15'
    implementation 'org.eclipse.jetty:jetty-servlet:11.0.15'

    // JWT
    implementation 'io.jsonwebtoken:jjwt:0.12.6'

    // Jakarta Servlet API
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'

    // Jackson for JSON serialization
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'

    // Mail
    implementation 'jakarta.mail:jakarta.mail-api:2.1.2'
    implementation 'org.eclipse.angus:jakarta.mail:2.0.2'

    implementation 'org.jsoup:jsoup:1.15.3'

    // Test dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

    implementation 'org.mindrot:jbcrypt:0.4'

    implementation 'sh.fyz:yellowconfig:1.0@jar'
}

test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

shadowJar {
    archiveClassifier.set('') // << Remove the '-all' suffix
    manifest {
        attributes(
                'Main-Class': 'sh.fyz.fiber.FiberServer'
        )
    }
}

// Make sure publish depends on shadowJar (build fat jar before publishing)
publish.dependsOn shadowJar
